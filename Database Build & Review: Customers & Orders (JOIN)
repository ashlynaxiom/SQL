-- For this project, I accessed data provided by Khan Academy to complete a thorough data review utilizing SQLite Studio. 


-- Table of Customers

CREATE TABLE customers (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT,
    email TEXT);
    
INSERT INTO customers (id, name, email) 
    VALUES (1, "Doctor Who", "doctorwho@timelords.com");
INSERT INTO customers (id, name, email) 
    VALUES (2, "Harry Potter", "harry@potter.com");
INSERT INTO customers (id, name, email) 
    VALUES (3, "Captain Awesome", "captain@awesome.com");


-- Table of Customer Orders

CREATE TABLE orders (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    customer_id INTEGER,
    item TEXT,
    price REAL);

INSERT INTO orders (customer_id, item, price)
    VALUES (1, "Sonic Screwdriver", 1000.00);
INSERT INTO orders (customer_id, item, price)
    VALUES (2, "High Quality Broomstick", 40.00);
INSERT INTO orders (customer_id, item, price)
    VALUES (1, "TARDIS", 1000000.00);


-- Utilize LEFT OUTER JOIN so that a customer is listed even if they've made no orders

SELECT customers.name, customers.email, orders.item, orders.price FROM customers
    LEFT OUTER JOIN orders ON customers.id = orders.customer_id;
    

-- Create another query that will result in one row per each customer, with their name, email, and total amount of money they've spent on orders. Sort the rows according to the total money spent, from the most spent to the least spent.

SELECT customers.name, customers.email, SUM(price) FROM customers
    LEFT OUTER JOIN orders ON customers.id = orders.customer_id
    GROUP BY customers.name
    ORDER BY orders.price DESC
